from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from admin_panel.app.models import Cart
from bot.src.services.utils import get_categories_page, get_subcategories_page


def get_menu_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ö–∞—Ç–∞–ª–æ–≥, –ö–æ—Ä–∑–∏–Ω–∞, FAQ."""

    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥", callback_data="catalog"))
    builder.add(InlineKeyboardButton(text="–ö–æ—Ä–∑–∏–Ω–∞", callback_data="show_cart"))
    builder.add(InlineKeyboardButton(text="FAQ", callback_data="faq"))
    builder.adjust(1)

    return builder.as_markup()


async def get_categories_keyboard(page: int = 1):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏."""

    categories_data = await get_categories_page(page=page)
    page_obj = categories_data['page_obj']
    categories = categories_data['object_list']

    builder = InlineKeyboardBuilder()

    for category in categories:
        builder.add(InlineKeyboardButton(
            text=category['title'],
            callback_data=f"select_category_{category['id']}"
        ))

    if page_obj.has_previous():
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data=f"categories_{page_obj.previous_page_number()}"
        ))

    if page_obj.has_next():
        builder.add(InlineKeyboardButton(
            text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è",
            callback_data=f"categories_{page_obj.next_page_number()}"
        ))

    main_menu = InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é",
        callback_data="main_menu"
    )

    builder.adjust(1)
    builder.row(main_menu)

    return builder.as_markup()


async def get_subcategories_keyboard(category_id: int, page: int = 1):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π."""

    subcategories_data = await get_subcategories_page(category_id, page=page)
    page_obj = subcategories_data['page_obj']
    subcategories = subcategories_data['object_list']

    builder = InlineKeyboardBuilder()

    for subcategory in subcategories:
        builder.add(InlineKeyboardButton(
            text=subcategory['title'],
            callback_data=f"select_subcategory_{subcategory['id']}"
        ))

    if page_obj.has_previous():
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data=f"subcategories_{category_id}_{page_obj.previous_page_number()}"
        ))

    if page_obj.has_next():
        builder.add(InlineKeyboardButton(
            text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è",
            callback_data=f"subcategories_{category_id}_{page_obj.next_page_number()}"
        ))

    builder.add(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
        callback_data="catalog"
    ))

    builder.adjust(1)

    return builder.as_markup()


async def get_buttons_for_products(product_id: int, quantity: int = 1):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤."""

    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text="‚ûñ", callback_data=f"decrease_{product_id}_{quantity}"))
    builder.add(InlineKeyboardButton(text=f"{quantity} —à—Ç.", callback_data=f"show_quantity_{product_id}"))
    builder.add(InlineKeyboardButton(text="‚ûï", callback_data=f"increase_{product_id}_{quantity}"))

    builder.add(InlineKeyboardButton(
        text="üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É",
        callback_data=f"add_to_cart_{product_id}_{quantity}"
    ))

    builder.adjust(3, 1)

    return builder.as_markup()


async def get_button_for_cart_item():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã."""

    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="show_cart"))

    builder.adjust(1)
    return builder.as_markup()


async def get_buttons_for_cart_item_delete(card_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã."""

    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_product_{card_id}"))

    builder.adjust(1)

    return builder.as_markup()


async def get_checkout_keyboard(cart_id: int, total_price: float):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞."""

    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text="–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"delete_all_cart_{cart_id}"))
    builder.add(
        InlineKeyboardButton(
            text="üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
            callback_data=f"checkout_{total_price}"
        )
    )

    builder.adjust(1)

    return builder.as_markup()


async def confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞."""

    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="confirm_order"))

    builder.adjust(1)

    return builder.as_markup()


async def pay_order(order_id: int, total_price: float):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞."""

    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text="üíµ –û–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"order_{order_id}_{total_price}"))

    builder.adjust(1)

    return builder.as_markup()
